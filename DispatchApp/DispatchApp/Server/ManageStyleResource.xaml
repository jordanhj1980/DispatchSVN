<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Name="Border"  CornerRadius="2,0,0,0" Background="Transparent" BorderThickness="0,0,1,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="HeaderContent" Grid.Column="0" Margin="4,0,0,0" ContentSource="Content"/>
                <Image Name="image" Grid.Column="1" Source="../Resources/icon_downarrow.png" />

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="image" Property="Source" Value="../Resources/icon_uparrow.png" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="image" Property="Source" Value="../Resources/icon_downarrow.png" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="image" Property="Source" Value="../Resources/icon_uparrow.png" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="image" Property="Source" Value="../Resources/icon_downarrow.png" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="HeaderRow" Height="auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Grid  HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="0" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton  IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}"
                                    Content="{TemplateBinding Header}" Grid.Row="0">

                                </ToggleButton>
                                <ContentPresenter Grid.Row="1" Margin="4" ContentSource="Header" Visibility="Collapsed" RecognizesAccessKey="True"/>

                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" CornerRadius="0,0,2,2">
                            <ContentPresenter  />
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="McRadioButton" TargetType="RadioButton" >
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Height" Value="36"></Setter>
        <Setter Property="Foreground" Value="#444"></Setter>
        <!--radiobutton上的文字颜色-->
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type RadioButton}">
                    <Grid x:Name="back" Background="#FFE0E0E0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3"></ColumnDefinition>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="5"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="10"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="x1" Width="3" Background="White" Visibility="Collapsed" Grid.Column="0">

                        </Border>

                        <!--<Border Grid.Column="1" Visibility="{Binding IsPlayVisibility}" Margin="10,0,10,0">
                               <TextBlock HorizontalAlignment="Left"
                            FontSize="14" FontFamily="/CloudMusic;component/Resources/#SF2015"     
                            Text="{TemplateBinding Tag}" Foreground="White"
                            VerticalAlignment="Center"></TextBlock> 
                            </Border> -->
                        <Border Grid.Column="1" Visibility="{Binding IsPlayVisibility}"  Margin="3,0,0,0">
                            <Image Margin="0 0 0 0" x:Name="_img" Source="../Resources/1.ico"/>
                        </Border>

                        <Border Grid.Column="3"  x:Name="x">
                            <TextBlock x:Name="Content" Text="{TemplateBinding Content}" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" ></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- <Trigger Property="IsMouseOver" Value="true" >
                                <Setter Property="Background" TargetName="back" Value="#FFF5F5F7"></Setter>
                            </Trigger> -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="x1" Value="Visible"></Setter>
                            <Setter Property="BorderThickness" TargetName="x1" Value="0"></Setter>
                            <Setter Property="Background" TargetName="x1" Value="#FFff5353"/>
                            <Setter Property="Foreground" TargetName="Content" Value="#FFeeeeee"></Setter>
                            <Setter Property="Background" TargetName="back" Value="#FF686f96"></Setter>
                            <!--用于按钮被选中时的背景色-->
                            <Setter TargetName="_img" Property="Source" Value="../Resources/3.ico"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox的样式 -->
    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- DataGrid样式  全局 -->
    <Style TargetType="DataGrid">
        <Setter Property="RowHeaderWidth" Value="0"></Setter>
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="CanUserResizeColumns" Value="False"></Setter>
        <Setter Property="CanUserResizeRows" Value="False"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="LightGray"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="LightGray"></Setter>
        <Setter Property="Background" Value="#FFbec1cd"></Setter>
        <Setter Property="Foreground" Value="#FF0a0a0a"/>
        <Setter Property="RowHeight" Value="50"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"></Setter>
    </Style>

    <LinearGradientBrush x:Key="GrayBlueGradientBrush"     StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#7982b0"  Offset="0" />
        <GradientStop Color="#585e80" Offset="1" />
    </LinearGradientBrush>

    <!--DataGrid表头样式-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="Background" Value="#FFF0F0F0"></Setter>-->
        <Setter Property="Background" Value="{StaticResource GrayBlueGradientBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
        <Setter Property="BorderBrush" Value="LightGray"></Setter>
        <Setter Property="Foreground" Value="#FFF0F0F0"/>
        <Setter Property="Height" Value="50" />
    </Style>

    <!--DataGrid复选框样式-->
    <Style TargetType="CheckBox" x:Key="VerticalCheckBox">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Name="sp" HorizontalAlignment="Center" >
                        <ContentPresenter HorizontalAlignment="Center" Margin="2"></ContentPresenter>
                        <Border x:Name="bd" BorderThickness="1.5" Height="20" Width="20" BorderBrush="Gray" >
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"  EndPoint="1,1">
                                    <GradientStop Color="LightGray" Offset="0.05"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path Name="checkPath" Width="18" Height="16" Stroke="Black"  StrokeThickness="2"></Path>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkPath" Property="Data" Value="M 1.5,5 L 7,13 17,0"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--设置文字居中-->
    <Style x:Key="dgCell" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#FF0a0a0a"/>
    </Style>

    <!--DataGrid单元格选中样式-->
    <Style TargetType="DataGridCell">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#ffbc20"/>
                <Setter Property="BorderThickness" Value="0"></Setter>                
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
    <Style x:Key="dataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="29"/>
        <Style.Triggers >
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#a2a2a0"></Setter>
                <Setter Property="Background" Value="#c4cec5"></Setter>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="微软雅黑"></Setter>
                <Setter Property="FontWeight" Value="UltraBlack"></Setter>
                <Setter Property="Foreground" Value="Black"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    -->

    <!--DataGrid单元格样式-->
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FFF" />
    </Style>

    <!--DataGrid按钮样式 蓝-->
    <Style x:Key="GridBtnInfo" TargetType="Button">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="Margin" Value="0,2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="bd" CornerRadius="3" BorderThickness="1" BorderBrush="LightGray" Background="#FF2F6DC1">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Opacity" Value="0.6"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#FF9BCEF7"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyCheckBox" TargetType="CheckBox">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
       
    </Style>

    <!--<Style x:Key="MyCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                            <Rectangle x:Name="CheckBoxRectangle" Fill="LightSkyBlue" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                            <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FF06DAD1" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                            <Grid x:Name="CheckedMark" Width="20" Height="20" Visibility="Collapsed">
                                <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M1,9 L10,17" Stroke="White"/>
                                <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M8,17 L20,4" Stroke="White"/>
                            </Grid>
                        </Grid>
                        <TextBlock Grid.Column="1" Text="AAAA" FontSize="18" Foreground="White" VerticalAlignment="Center" Margin="14,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#FF00A8E0"></Setter>
                            <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                            <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--DataGrid_Group xiaoziAdd 20181030-->
    
    
    <!--DataGrid_KeyBoard xiaoziAdd 20181030-->
    
    
    <!--DataGrid_Hotline xiaoziAdd 20181030-->
    

</ResourceDictionary>